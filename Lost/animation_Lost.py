import matplotlib.pyplot as plt
from matplotlib import animation, test
import numpy as np
from matplotlib import patches

# エージェントの移動の様子を可視化します
# 参考URL http://louistiao.me/posts/notebooks/embedding-matplotlib-animations-in-jupyter-notebooks/

# animation_Edit.py の整理ver.

class Anim():
    
    def __init__(self, STATE_HISTORY):

        self.state_history = STATE_HISTORY
        self.fig = plt.figure(figsize=(7, 7))
        self.ax = plt.gca()
        self.ims = []

    def view_plot_text(self):


        import matplotlib.pyplot as plt
        import numpy as np
        from PIL import Image

        

        plt.plot([20.5], [20.5], marker="s", color='black', markersize = 520, alpha = 0.8)
        
        
        

        # 描画範囲の設定と目盛りを消す設定
        
        
        # self.ax.set_xlim(-1.5, 41.5)
        self.ax.set_xlim(-7.5, 41.5)
        # self.ax.set_ylim(-10.5, 51.5)
        self.ax.set_ylim(-10.5, 51.5)
        plt.tick_params(axis='both', which='both', bottom='off', top='off',
                        labelbottom='off', right='off', left='off', labelleft='off')




        # plt.legend()
        # test = [[22, 8], [23, 8], [24, 8], [25, 8], [26, 8], [27, 8], [21, 8], [20, 8], [19, 8], [18, 8], [17, 8], [16, 8], [15, 8], [14, 8], [13, 8], [12, 8], [11, 8], [10, 8], [9, 8], [8, 8], [7, 8], [6, 8], [5, 8], [4, 8], [3, 8], [2, 8], [1, 8], [0, 8]]
        # test = [[-1, 6], [-1, 2], [-1, 10], [-2, 10], [-1, 14], [-2, 14], [22, 8], [21, 8], [20, 8], [19, 8], [18, 8], [18, 7], [18, 6], [18, 5], [18, 4], [18, 3], [18, 2], [17, 2], [16, 2], [15, 2], [14, 2], [13, 2], [12, 2], [11, 2], [10, 2], [9, 2], [8, 2], [7, 2], [6, 2], [5, 2], [4, 2], [3, 2], [2, 2], [1, 2], [0, 2], [17, 8], [16, 8], [15, 8], [14, 8], [13, 8], [12, 8], [11, 8], [10, 8], [9, 8], [8, 8], [7, 8], [6, 8], [5, 8], [4, 8], [3, 8], [2, 8], [1, 8], [0, 8], [18, 9], [18, 10], [18, 11], [18, 12], [18, 13], [18, 14], [17, 14], [16, 14], [15, 14], [14, 14], [13, 14], [13, 13], [13, 12], [12, 12], [11, 12], [10, 12], [9, 12], [8, 12], [7, 12], [12, 14], [11, 14], [10, 14], [9, 14], [8, 14], [7, 14], [6, 14], [5, 14], [4, 14], [3, 14], [2, 14], [1, 14], [0, 14], [5, 13], [5, 12], [4, 12], [3, 12], [2, 12], [1, 12], [0, 12], [5, 15], [5, 16], [4, 16], [3, 16], [2, 16], [1, 16], [0, 16], [13, 1], [13, 0], [12, 0], [11, 0], [10, 0], [9, 0], [8, 0], [6, 1], [6, 0], [5, 0], [4, 0], [3, 0], [2, 0], [1, 0], [0, 0], [6, 3], [6, 4], [5, 4], [4, 4], [3, 4], [2, 4], [1, 4], [0, 4], [13, 3], [13, 4], [12, 4], [11, 4], [10, 4], [9, 4], [8, 4], [6, 7], [6, 6], [5, 6], [4, 6], [3, 6], [2, 6], [1, 6], [0, 6], [6, 9], [6, 10], [5, 10], [4, 10], [3, 10], [2, 10], [1, 10], [0, 10], [13, 7], [13, 6], [12, 6], [11, 6], [10, 6], [9, 6], [8, 6], [13, 9], [13, 10], [12, 10], [11, 10], [10, 10], [9, 10], [8, 10], [13, 15], [13, 16], [12, 16], [11, 16], [10, 16], [9, 16], [8, 16], [7, 16], [22, 9], [22, 10], [22, 11], [22, 12], [22, 13], [22, 14], [22, 15], [23, 8], [22, 7], [22, 6], [22, 5], [22, 4], [22, 3], [22, 2], [22, 1], [24, 8], [25, 8], [26, 8], [27, 8], [27, 7], [27, 6], [27, 5], [27, 4], [27, 3], [27, 2], [27, 1], [27, 9], [27, 10], [27, 11], [27, 12], [27, 13], [27, 14], [27, 15], [27, 0], [27, 16], [22, 0], [22, 16]]
        test = [[16, 8], [15, 8], [14, 8], [13, 8], [12, 8], [11, 8], [10, 8],[9, 8], [8, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [21, 8], [20, 8], [19, 8], [18, 8], [17, 8], [22, 8], [23, 8], [24, 8], [25, 8], [26, 8], [27, 8], [22, 8], [22, 7], [22, 6], [22, 5], [22, 4], [22, 3], [22, 8], [22, 9], [22, 10], [22, 11], [22, 12], [22, 13], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8]]
        # test = [[22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [21, 8], [20, 8], [19, 8], [18, 8], [17, 8], [22, 8], [23, 8], [24, 8], [25, 8], [26, 8], [27, 8], [22, 8], [22, 7], [22, 6], [22, 5], [22, 4], [22, 3], [22, 8], [22, 9], [22, 10], [22, 11], [22, 12], [22, 13], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8]]
        for t in range(len(test)):
            state = test[t]
            y = 46-(state[0] + state[0] + 0.5) # 14.5)
            x = state[1] + state[1] + 0.5

            plt.plot([x], [y], marker="s", color='grey', markersize = 18)


        # LandMark = [[27, 8], [22, 8], [18, 8], [13, 8], [9, 8], [5, 8],  [0, 8]]
        LandMark = [[22, 8]]




        # plt.plot([20.5], [20.5], marker="s", color='black', markersize = 520, alpha = 0.8)
        for t in range(len(LandMark)):
            state = LandMark[t]
            y = 46-(state[0] + state[0] + 0.5) # 14.5)
            x = state[1] + state[1] + 0.5

            if state == [0, 8]:
                # plt.plot([x], [y], marker="s", color='orange', markersize = 18, alpha = 0.5)
                plt.plot([x], [y], marker="s", color='red', markersize = 18, alpha = 0.5)
                # pass
            
            
            # add 1007
            elif state == [9, 8] or state == [5, 8]:
                # plt.plot([x], [y], marker="s", color='orange', markersize = 18, alpha = 0.5)
                plt.plot([x], [y], marker="s", color='blue', markersize = 18, alpha = 0.5)
                # pass
            else:
                plt.plot([x], [y], marker="s", color='green', markersize = 18, alpha = 0.5)

        
    
    def move_history(self):
        line, = plt.plot([], [])
        self.ims.append([line])
        # fig, ax = plt.subplots(figsize=(4, 4))

        for t in range(len(self.state_history)): # フレームごとの描画内容

            # title = plt.title('step = {0}'.format(t))
            # title = plt.title('data={}'.format(t))
            title = self.ax.text(0.5, 1.01, 'Steps={}'.format(t),
            ha='center', va='bottom',
            transform=self.ax.transAxes, fontsize='large')
            
            state = self.state_history[t]  # 現在の場所を描く
            
            # try:
            #     next_state = self.state_history[t+1]
            # except:
            #     pass

            # try:
            #     prev_state = self.state_history[t-1]
            # except:
            #     pass

            # try:
            #     prev2 = self.state_history[t-2]
            # except:
            #     pass

            # try:
            #     prev3 = self.state_history[t-3]
            # except:
            #     pass

            # try:
            #     prev4 = self.state_history[t-4]
            # except:
            #     pass

            # try:
            #     prev5 = self.state_history[t-5]
            # except:
            #     pass

            # try:
            #     prev6 = self.state_history[t-6]
            # except:
            #     pass

            # try:
            #     prev7 = self.state_history[t-7]
            # except:
            #     pass

            # try:
            #     prev8 = self.state_history[t-8]
            # except:
            #     pass
            

            if state[1] != 0:
                y = 46-(state[0] + state[0] + 0.5) # 14.5)
                x = state[1] + state[1] + 0.5
            else:
                x = 0.5
                y = 46-(state[0] + state[0] + 0.5) # 14.5)

            # plt.plot([x], [y], marker="s", color='black', markersize = 10)

            

            
            try:
                # if state == prev_state:
                    

                #     # # if state[0] == prev_state[0] == next_state[0] or state[0] == prev_state[0] == prev2[0]: #  or state[1] == prev_state[1] == next_state[1]:
                #     # #     line, = plt.plot(x, y, marker="o", color='y', markersize = 15, alpha = 0.5)
                #     # # elif state == prev_state:
                #     # #     line, = plt.plot(x, y, marker="s", color='r', markersize = 15, alpha = 0.5)
                #     # # else:
                #     # #     line, = plt.plot(x, y, marker="s", color='b', markersize = 15, alpha = 0.5)

                #     # if state[0] == prev_state[0] == next_state[0] == prev2[0] == prev3[0] == prev4[0] == prev5[0] == prev6[0] == prev7[0] == prev8[0]:
                #     #     line, = plt.plot(x, y, marker="s", color='y', markersize = 18, alpha = 0.5)
                #     # else:
                        line, = plt.plot(x, y, marker="o", color='r', markersize = 15, alpha = 0.5)

                   
                # else:
                #     line, = plt.plot(x, y, marker="o", color='r', markersize = 15, alpha = 0.5)
            except:
                print("エラー(初回)")
                line, = plt.plot(x, y, marker="s", color='r', markersize = 15, alpha = 0.5)
            self.ims.append([line] + [title])
            if t == 0:
                self.ims.append([line] + [title])



            # plt.legend()

            # # ステップ数表示
            # step_text = plt.text(0.05, 0.9, '', transform=plt.transAxes)

            # # 時間
            # step_text.set_text('step = {0}'.format(t))
            # line = plt.title('step = {0}'.format(t))



    def view_anim(self): #　初期化関数とフレームごとの描画関数を用いて動画を作成する
        self.anim = animation.ArtistAnimation(self.fig, self.ims, interval=450, repeat = False)
        # self.anim = animation.ArtistAnimation(self.fig, self.ims, interval=15, repeat = True)
        plt.show()
        return True


if __name__ == "__main__":

    
    # 1015
    STATE_HISTORY = [[22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [21, 8], [20, 8], [19, 8], [22, 8], [22, 7], [22, 7], [22, 6], [22, 8], [23, 8], [24, 8], [25, 8], [22, 8], [22, 9], [22, 10], [22, 11], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8]]
    STATE_HISTORY = [[22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 7], [22, 7], [22, 8], [21, 8], [20, 8], [22, 8], [23, 8], [24, 8], [22, 8], [22, 9], [22, 10], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8]]
    STATE_HISTORY = [[22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [22, 8], [21, 8], [21, 8], [21, 8], [21, 8], [21, 8], [20, 8], [20, 8], [20, 8], [20, 8], [20, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [22, 8], [23, 8], [23, 8], [23, 8], [23, 8], [23, 8], [24, 8], [24, 8], [24, 8], [24, 8], [24, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 8], [22, 7], [22, 7], [22, 7], [22, 7], [22, 7], [22, 6], [22, 6], [22, 6], [22, 6], [22, 6], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 8], [22, 9], [22, 9], [22, 9], [22, 9], [22, 9], [22, 10], [22, 10], [22, 10], [22, 10], [22, 10], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8]]
    STATE_HISTORY = [[22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [21, 8], [20, 8], [19, 8], [22, 8], [23, 8], [24, 8], [25, 8], [22, 8], [22, 7], [22, 6], [22, 5], [22, 8], [22, 9], [22, 10], [22, 11], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8]]
    STATE_HISTORY = [[22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [21, 8], [20, 8], [19, 8], [22, 8], [23, 8], [24, 8], [25, 8], [22, 8], [22, 7], [22, 6], [22, 5], [22, 8], [22, 9], [22, 10], [22, 11], [22, 8]]
    
    
    # 優先的に探す(初期状態に与えるデータセット)
    # LEFT = 2, UP = 1
    STATE_HISTORY = [[22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 7], [22, 6], [22, 5], [22, 8], [21, 8], [20, 8], [19, 8], [22, 8], [22, 9], [22, 10], [22, 11], [22, 8], [23, 8], [24, 8], [25, 8], [22, 8]]
    STATE_HISTORY = [[22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 7], [22, 6], [22, 5], [22, 8], [21, 8], [20, 8], [19, 8], [22, 8], [23, 8], [24, 8], [25, 8], [22, 8], [22, 9], [22, 10], [22, 11], [22, 8]]
    # LEFT = 2, UP = 3
    STATE_HISTORY = [[22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [21, 8], [20, 8], [19, 8], [22, 8], [22, 7], [22, 6], [22, 5], [22, 8], [22, 9], [22, 10], [22, 11], [22, 8], [23, 8], [24, 8], [25, 8], [22, 8]]
    STATE_HISTORY = [[22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [21, 8], [20, 8], [19, 8], [22, 8], [22, 7], [22, 6], [22, 5], [22, 8], [23, 8], [24, 8], [25, 8], [22, 8], [22, 9], [22, 10], [22, 11], [22, 8]]
    # LEFT = 2, UP = 3, RIGHT = 5
    STATE_HISTORY = [[22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 9], [22, 10], [22, 11], [22, 8], [21, 8], [20, 8], [19, 8], [22, 8], [22, 7], [22, 6], [22, 5], [22, 8], [23, 8], [24, 8], [25, 8], [22, 8]]

    # Integrate
    STATE_HISTORY = [[12, 8], [12, 8], [12, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 9], [22, 10], [22, 11], [22, 8], [21, 8], [20, 8], [19, 8], [22, 8], [22, 7], [22, 6], [22, 5], [22, 8], [23, 8], [24, 8], [25, 8], [22, 8]]
    STATE_HISTORY = [[12, 8], [12, 8], [12, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 8], [22, 9], [22, 10], [22, 11], [22, 8], [22, 7], [22, 6], [22, 5], [22, 8], [23, 8], [24, 8], [25, 8], [22, 8]]


    Env_Anim = Anim(STATE_HISTORY)

    print("STATE_HISTORY:{}".format(Env_Anim.state_history))
    print("length:{}".format(len(Env_Anim.state_history)))

    Env_Anim.view_plot_text()
    Env_Anim.move_history()
    Env_Anim.view_anim()

    